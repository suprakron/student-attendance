import React, { useEffect, useState } from 'react';
import axios from 'axios';
import '../assets/styles/Attendance.css';

const Attendance = () => {
  const [students, setStudents] = useState([]);
  const [attendanceData, setAttendanceData] = useState({});
  const [classLevels, setClassLevels] = useState([]); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°

  useEffect(() => {
    axios.get('http://localhost:4000/api/students')
      .then(res => {
        setStudents(res.data);

        // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á initial attendance data
        const initialData = {};
        res.data.forEach(student => {
          initialData[student.id] = { status: '', remark: '' };
        });
        setAttendanceData(initialData);

        const uniqueLevels = [...new Set(res.data.map(s => s.classlevel))];
        setClassLevels(uniqueLevels);
      })
      .catch(err => {
        console.error('‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      });
  }, []);

  const handleStatusChange = (id, status) => {
    setAttendanceData(prev => ({
      ...prev,
      [id]: { ...prev[id], status }
    }));
  };

  const handleRemarkChange = (id, remark) => {
    setAttendanceData(prev => ({
      ...prev,
      [id]: { ...prev[id], remark }
    }));
  };

  const handleSaveAll = async () => {
    const today = new Date().toISOString().split('T')[0];
    const className = "‡∏°.4/1"; 

    const payload = students.map(student => ({
      student_id: student.id,
      class_name: className,
      date: today,
      status: attendanceData[student.id]?.status || '',
      remark: attendanceData[student.id]?.status === '‡∏•‡∏≤' ? attendanceData[student.id]?.remark || '' : null
    }));

    try {
      await axios.post('http://localhost:4000/api/attendance', payload);
      alert('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
    } catch (err) {
      console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', err);
      alert('‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }
  };

  return (
    <div className="attendance-container">
      <h2 className="title">‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h2>
      {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏≤‡∏¢‡∏ä‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ */}
      {classLevels.length > 0 && (
        <p className="class-info">‡∏™‡∏≤‡∏¢‡∏ä‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ: {classLevels.join(', ')}</p>
      )}

      <table className="attendance-table">
        <thead>
          <tr>
            <th>‡∏£‡∏´‡∏±‡∏™</th>
            <th>‡∏ä‡∏∑‡πà‡∏≠</th>
            <th>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
            <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
            <th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>
          </tr>
        </thead>
        <tbody>
          {students.map(student => (
            <tr key={student.id}>
              <td>{student.id}</td>
              <td>{student.firstname}</td>
              <td>{student.lastname}</td>
              <td>
                <select
                  value={attendanceData[student.id]?.status || ''}
                  onChange={(e) => handleStatusChange(student.id, e.target.value)}
                >
                  <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>
                  <option value="‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô">‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</option>
                  <option value="‡∏Ç‡∏≤‡∏î">‡∏Ç‡∏≤‡∏î</option>
                  <option value="‡∏°‡∏≤‡∏™‡∏≤‡∏¢">‡∏°‡∏≤‡∏™‡∏≤‡∏¢</option>
                  <option value="‡∏•‡∏≤">‡∏•‡∏≤</option>
                </select>
              </td>
              <td>
                {attendanceData[student.id]?.status === '‡∏•‡∏≤' && (
                  <input
                    type="text"
                    value={attendanceData[student.id]?.remark || ''}
                    onChange={(e) => handleRemarkChange(student.id, e.target.value)}
                  />
                )}
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <button className="save-button" onClick={handleSaveAll}>
        üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      </button>
    </div>
  );
};

export default Attendance;
